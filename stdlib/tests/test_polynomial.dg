fn test_polynomial() ~> int {

	Poly a = poly_parse("3x^2 + 2x + 1");
	Poly b = poly_parse("4x + 5");
	
	Poly p1 = poly_parse("33.1x^4 + 4");
	poly_dtor(p1);
	
	Poly c = poly_add(a,b);
	
	assert(poly_deg(c) == 2);
	assert(c.coeff[0] == 6);
	assert(c.coeff[1] == 6);
	assert(c.coeff[2] == 3);
	
	Poly d = poly_mul(a,b); 
	//(4x+5)(3x^2 + 2x + 1)
	//= (4x)(3x^2 + 2x + 1) + 5(3x^2 + 2x + 1)
	//= 12x^3 + 8x^2 + 4x + 15x^2 + 10x + 5
	//= 12x^3 + 23x^2 + 14x + 5
	
	assert(poly_deg(d) == 3);
	assert(d.coeff[0] == 5);
	assert(d.coeff[1] == 14);
	assert(d.coeff[2] == 23);
	assert(d.coeff[3] == 12);
	
	Poly e = poly_derivative(a); //6x + 2
	assert(poly_deg(e) == 1);
	assert(e.coeff[0] == 2);
	assert(e.coeff[1] == 6);
	
	Poly f = poly_integral(b); //2x^2 + 5x
	assert(poly_deg(f) == 2);
	assert(f.coeff[0] == 0);
	assert(f.coeff[1] == 5);
	assert(f.coeff[2] == 2);
	
	poly_dtor(a);
	poly_dtor(b);
	poly_dtor(c);
	poly_dtor(d);
	poly_dtor(e);
	poly_dtor(f);

	return 0;
}
