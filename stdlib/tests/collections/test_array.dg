fn test_array() ~> int {

	_test_array_contains();
	_test_array_reduce();

	return 0;
}

fn _test_array_contains() ~> bool {

	[int] arr = malloc(4*2);
	arr[0] = 3;
	arr[1] = 5;
	
	assert(array_contains(arr, 2, 3));
	assert(!array_contains(arr, 2, 4));

	return true;
}

fn _test_array_reduce() ~> bool {
	
	[int] arr = malloc(4*2);
	arr[0] = 3;
	arr[1] = 5;
	
	assert(array_reduce(arr, 2, (a,b) -> a+b, 0) == 8);
	//assert(intarray_sum(arr, 2) == 8);
	
	assert(array_reduce(arr, 2, (a,b) -> a+b, 0) / 2 == 4);
	//assert(intarray_average(arr, 2) == 4);
	
	assert(array_reduce(arr, 2, (a,b) -> min(a,b), 0) == 3);
	//assert(intarray_min(arr, 2) == 3);
	
	assert(array_reduce(arr, 2, (a,b) -> max(a,b), 0) == 5);
	//assert(intarray_max(arr, 2) == 5);
	
	return true;
}
