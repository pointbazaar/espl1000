/*
	This file contains various functions
	to perform mathematical operations.
*/

@halts
fn sign (int n) -> int {
	if n >  0 { return 1; }
	if n == 0 { return 0; }
	return -1;
}

@halts
fn ipow (int base, uint power) -> int {
	int res = 1;
	int pmax = power; pmax--;
	for i in 0 .. pmax {
		res = res * base;
	}
	return res;
}

@halts
fn faculty (uint n) -> uint {

	if n <= 1 { return 1; }
	
	uint res = 1;
	for k in 1 .. n { res = res * k; }
	return res;
}

@halts
fn max (int a, int b) -> int {
	if a > b {return a;}
	return b;
}

@halts
fn min (int a,int b) -> int {
	if a < b {return a;}
	return b;
}

fn gcd (int a, int b) -> int {
	if a==0 {return b;}
	return gcd(mod(b,a), a);
}

fn lcm (int a, int b) -> int {

	return div((a*b), gcd(a,b));
}

fn mod(int a, int b) -> int {
	//TODO
	x=0;
	return x;
}

fn div(int a, int b) -> int {

	//TODO
	x=0;
	return x;
}

@halts
fn fib(uint n) -> uint {

	uint a = 0;
	uint b = 1;

	for i in 1 .. (n-1) {

		uint k = a+b;
		a = b;
		b = k;
	}

	return a;
}

@halts
fn iseven(int x) -> bool { return (x & 0x01) == 0; }

@halts
fn isodd(int x) -> bool { return (x & 0x01) == 1; }
