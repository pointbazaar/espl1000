
// untested
fn strlen(*char str) -> uint64 {

	uint64 l = 0;
	*char p = str;
	char c = *p;

	while c != 0 {
		l++;
		p += 1;
		c = *p;
	}
	return l;
}

fn print_digit(uint64 d) -> int {
	return fprint_digit(1, d);
}

fn fprint_digit(int fd, uint64 d) -> int {

	if d > 9 {
		return -1; // Error: not a single digit
	}

	[char] digits = "0123456789";
	*char ptr = digits;
	ptr += d;
	write(fd, ptr, 1);
	return 0;
}

fn print_uint64(uint64 x) -> int {
	return fprint_uint64(1, x);
}

fn fprint_uint64(int fd, uint64 x) -> int {

	uint64 d = x % 10;

	uint64 rest = x / 10;

	if rest != 0{
		fprint_uint64(fd, rest);
	}

	fprint_digit(fd, d);

	return 0;
}

fn println() -> int {
	return fprintln(1);
}

fn fprintln(int fd) -> int {

	[char] str1 = "\n";
	*char ptr = str1;
	write(fd, ptr, 1);

	return 0;
}

fn println_uint64(uint64 x) -> int {

	print_uint64(x);
	println();

	return 0;
}
