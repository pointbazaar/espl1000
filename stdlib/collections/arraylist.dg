
struct ArrayList {

	@private [int] arr;
	@private uint size;
	@private uint capacity;
}


fn arraylist_size(ArrayList list) -> uint	 {
	return list.size;
}


fn arraylist_at(ArrayList list, uint index) -> int {

	return list.arr[index];
}

fn arraylist_contains(ArrayList list, int elem) -> bool {

	for i in 0 .. (list.size - 1) {
		if list.arr[i] == elem { return true; }
	}
	return false;
}

fn arraylist_index_of(ArrayList list, int elem) -> int {

	for i in 0 .. (list.size - 1) {
		if list.arr[i] == elem { return i; }
	}
	return -1;
}

fn arraylist_clear(ArrayList list) ~> bool {
	list.size = 0;
	return true;
}


