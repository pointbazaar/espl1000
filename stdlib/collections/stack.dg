
//A naive implementation of a stack

struct Stack {
	@private uint size;
	@private uint capacity;
	@private [int] arr;
}


fn stack_size(Stack s) -> uint {
	return s.size;
}

fn stack_contains(Stack s, int elem) -> bool {

	for i in 0 .. (s.size - 1) {
		if s.arr[i] == elem { return true; }
	}
	return false;
}


fn stack_peek(Stack s) -> int {

	return s.arr[s.size - 1];
}

fn stack_pop(Stack s) -> int {

	res = stack_peek(s);
	s.size--;

	return res;
}
