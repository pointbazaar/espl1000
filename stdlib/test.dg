#include <stdio.h>
#include <assert.h>
#include <string.h>

fn main() ~> int {
	try {
		return main2();
	} catch {}
}

fn status([char] module) ~> bool {
	[char] str = malloc(100);
	strcpy(str, "[stdlib][Test] ");
	strcat(str, module);
	puts(str);
	free(str);
	return true;
}

fn main2() ~> int throws {
	
	status("math"); test_math();

	status("primes"); test_primes();

	status("set"); test_set();
	
	status("stack"); test_stack();
	
	//status("array"); test_array();
	
	status("bintree"); test_intbintree();
	
	status("linkedlist"); test_linkedlist();
	
	status("arraylist"); test_arraylist();
	
	status("polynomial"); test_polynomial();
	
	status("matrix"); test_matrix();
	
	status("v2"); test_v2();
	
	status("collision2d"); test_collision2d();

	puts("[stdlib] PASSED ALL TESTS\n");

	return 0;
}

fn assertf(float actual, float expect) -> bool {

	delta = actual - expect;
	return delta*delta < 0.001;
}

