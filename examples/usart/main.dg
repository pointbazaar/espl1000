// for the atmega328p

// to debug this, can use cheap AZ Delivery Logic Analyzer
// and following packages (arch linux)
//
// - sigrok-cli
// - sigrok-firmware-fx2lafw (this is needed so it correctly recognizes the logic analyzer)
// - pulseview (gui viewer)

// in pulseview, add the decoder for USART, then specify:
//
// - baudrate 9600
// - 8 data bits
// - even parity bit
// - 1 stop bit (even though we send 2, selecting that is not possible)
// - bit order is lsb-first
// - data format is hex for this example (sending increasing numbers)

fn main () ~> int {

	usart_init(2400);

	uint8 c = 0;
	while(true){
		c++;
		usart_tx_char('h');
		usart_tx_char('e');
		usart_tx_char('l');
		usart_tx_char('l');
		usart_tx_char('o');
		delay();
	}

	return 0;
}

fn delay() -> int {

	//using Timer0

	//TCCR0A = 0x0, set timer mode
	timer0_mode(0x0);

	//TCCR0B = 0b00000101, set prescaler to 1024
	timer0_prescaler(0x5);

	//while(TCNT0 != 0xfe){}
	while(timer0_read() != 0xfe){}

	return 1;
}

