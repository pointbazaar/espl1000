# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-job-ubuntu-2004:
    machine:
      image: ubuntu-2004:2022.10.1
    steps:
      - checkout
      - run:
          environment:
            DEBIAN_FRONTEND: noninteractive
          command: |
            sudo apt-get update
            sudo apt install -yqq gcc make cmake avra nasm
      - run:
          name: "build"
          command: |
            echo 'export PATH=/home/circleci/project/build/compiler/main:"$PATH"' >> "$BASH_ENV"
            source "$BASH_ENV"
            make build
      - run:
          name: "test"
          command: |
            echo 'export PATH=/home/circleci/project/build/compiler/main:"$PATH"' >> "$BASH_ENV"
            source "$BASH_ENV"
            make test

  build-job-ubuntu-2204:
    machine:
      image: ubuntu-2204:2022.10.2
    steps:
      - checkout
      - run:
          environment:
            DEBIAN_FRONTEND: noninteractive
          command: |
            sudo apt-get update
            sudo apt install -yqq gcc make cmake avra nasm
      - run:
          name: "build"
          command: |
            echo 'export PATH=/home/circleci/project/build/compiler/main:"$PATH"' >> "$BASH_ENV"
            source "$BASH_ENV"
            make build
      - run:
          name: "test"
          command: |
            echo 'export PATH=/home/circleci/project/build/compiler/main:"$PATH"' >> "$BASH_ENV"
            source "$BASH_ENV"
            make test

  build-job-archlinux:
    docker:
      - image: archlinux/archlinux:latest
    resource_class: small
    steps:
      - checkout
      - run:
          command: |
            pacman -Syu --noconfirm --verbose
      - run:
          command: |
            pacman -S --noconfirm --verbose gcc make cmake nasm
      - run:
          command: |
            pacman -S --noconfirm --needed git base-devel

            useradd -m builduser
            passwd -d builduser
            echo 'builduser ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers

            mkdir -p /home/builduser/build /home/builduser/pkgdest /home/builduser/srcdest

            chown -R builduser:builduser /home/builduser/build /home/builduser/pkgdest /home/builduser/srcdest

            sudo -u builduser git clone https://aur.archlinux.org/avra.git /home/builduser/avra

            su - builduser -c "cd /home/builduser/avra && BUILDDIR=/home/builduser/build PKGDEST=/home/builduser/pkgdest SRCDEST=/home/builduser/srcdest makepkg -si --noconfirm"

            userdel -r builduser
      - run:
          name: "build"
          command: |
            echo 'export PATH=/home/circleci/project/build/compiler/main:"$PATH"' >> "$BASH_ENV"
            source "$BASH_ENV"
            make build
      - run:
          name: "test"
          command: |
            echo 'export PATH=/home/circleci/project/build/compiler/main:"$PATH"' >> "$BASH_ENV"
            source "$BASH_ENV"
            make test

  valgrind:
    machine:
      image: ubuntu-2204:2022.10.2
    steps:
      - checkout
      - run:
          environment:
            DEBIAN_FRONTEND: noninteractive
          command: |
            sudo apt-get update
            sudo apt install -yqq gcc make cmake valgrind avra nasm
      - run:
          name: "build"
          command: |
            echo 'export PATH=/home/circleci/project/build/compiler/main:"$PATH"' >> "$BASH_ENV"
            source "$BASH_ENV"
            make build
      - run:
          name: "valgrind tests"
          command: |
            make valgrind_tests
  check-format:
    docker:
      - image: library/archlinux:latest
    steps:
      - checkout
      - run: pacman -Sy
      - run: pacman -S --noconfirm make clang git
      - run:
          name: "check-format"
          command: |
            echo 'export PATH=/home/circleci/project/build/compiler/main:"$PATH"' >> "$BASH_ENV"
            source "$BASH_ENV"
            echo "PATH is: $PATH"
            make check-format

  check-shell-scripts:
    docker:
      - image: library/archlinux:latest
    steps:
      - checkout
      - run: pacman -Sy
      - run: pacman -S --noconfirm shellcheck
      - run:
          name: "shellcheck"
          command: |
            find . -type d \( -name 'build' -o -name 'dependencies' \) -prune -o -type f -name '*.sh' -exec shellcheck --shell=sh {} +


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-workflow:
    jobs:
      - check-format
      - check-shell-scripts
      - build-job-ubuntu-2004
      - build-job-ubuntu-2204
      - build-job-archlinux
      - valgrind
